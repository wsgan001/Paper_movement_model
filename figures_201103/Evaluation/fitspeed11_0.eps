%!PS-Adobe-2.0 EPSF-2.0
%%Title: fitspeed11_0.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Wed Jun 24 10:50:37 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fitspeed11_0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (ywj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 24 10:50:37 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 1565 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 1565 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1565 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2361 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2361 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2361 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3158 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3158 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3158 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3954 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3954 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3954 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4751 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4751 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2108 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3040 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3040 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3040 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3972 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3972 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3972 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 60)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4903 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4903 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4903 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 80)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5835 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5835 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5835 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 120)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (probability)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3971 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (speed\(km/h\))]
] -80.0 MCshow
LTb
% Begin plot #1
5.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
5696 951 M
[ [(Helvetica) 240.0 0.0 true true 0 (f\(x\)=1-e)]
[(Helvetica) 192.0 120.0 true true 0 (-0.00265x)]
[(Helvetica) 153.6 216.0 true true 0 (1.682)]
[(Helvetica) 192.0 120.0 true true 0 (-0.713)]
] -123.2 MRshow
5.000 UL
LTb
0.00 0.00 0.00 C 5840 951 M
639 0 V
1176 2800 M
56 7 V
57 16 V
56 22 V
57 28 V
56 32 V
57 36 V
56 39 V
57 43 V
56 45 V
57 48 V
56 49 V
57 51 V
56 53 V
57 53 V
56 53 V
57 54 V
56 55 V
57 54 V
56 53 V
56 53 V
57 53 V
56 51 V
57 51 V
56 49 V
57 48 V
56 47 V
57 45 V
56 44 V
57 43 V
56 40 V
57 40 V
56 37 V
57 36 V
56 34 V
57 33 V
56 31 V
57 29 V
56 28 V
57 27 V
56 25 V
56 23 V
57 22 V
56 21 V
57 20 V
56 18 V
57 17 V
56 16 V
57 14 V
56 14 V
57 13 V
56 12 V
57 11 V
56 10 V
57 9 V
56 9 V
57 8 V
56 7 V
57 7 V
56 6 V
56 6 V
57 5 V
56 5 V
57 4 V
56 4 V
57 3 V
56 3 V
57 3 V
56 3 V
57 2 V
56 3 V
57 2 V
56 1 V
57 2 V
56 1 V
57 2 V
56 1 V
57 1 V
56 1 V
57 1 V
56 0 V
56 1 V
57 1 V
56 0 V
57 1 V
56 0 V
57 0 V
56 1 V
57 0 V
56 0 V
57 0 V
56 1 V
57 0 V
56 0 V
57 0 V
56 0 V
57 0 V
56 0 V
57 0 V
56 1 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
1.000 UL
LTb
0.90 0.12 0.06 C 1176 2773 PentF
1269 2840 PentF
1362 2900 PentF
1456 2958 PentF
1549 3017 PentF
1642 3079 PentF
1735 3144 PentF
1782 3202 PentF
1875 3272 PentF
1968 3341 PentF
2061 3412 PentF
2154 3484 PentF
2248 3556 PentF
2341 3631 PentF
2387 3696 PentF
2481 3770 PentF
2574 3844 PentF
2667 3917 PentF
2760 3990 PentF
2853 4060 PentF
2946 4119 PentF
2993 4183 PentF
3086 4243 PentF
3179 4298 PentF
3273 4349 PentF
3366 4394 PentF
3459 4434 PentF
3552 4464 PentF
3599 4497 PentF
3692 4528 PentF
3785 4555 PentF
3878 4579 PentF
3972 4602 PentF
4065 4622 PentF
4111 4639 PentF
4204 4658 PentF
4298 4674 PentF
4391 4690 PentF
4484 4705 PentF
4577 4717 PentF
4670 4727 PentF
4717 4733 PentF
4810 4738 PentF
4903 4740 PentF
4997 4743 PentF
5090 4744 PentF
5183 4745 PentF
5276 4746 PentF
5323 4747 PentF
5416 4747 PentF
5509 4748 PentF
5602 4748 PentF
5695 4748 PentF
5789 4749 PentF
5882 4749 PentF
5928 4749 PentF
6022 4749 PentF
6115 4749 PentF
6208 4749 PentF
6301 4749 PentF
6394 4750 PentF
6441 4750 PentF
6534 4750 PentF
6627 4750 PentF
6720 4750 PentF
1176 2756 PentF
1269 2828 PentF
1362 2895 PentF
1456 2963 PentF
1549 3030 PentF
1642 3100 PentF
1735 3170 PentF
1782 3230 PentF
1875 3303 PentF
1968 3375 PentF
2061 3446 PentF
2154 3516 PentF
2248 3586 PentF
2341 3658 PentF
2387 3718 PentF
2481 3790 PentF
2574 3859 PentF
2667 3927 PentF
2760 3994 PentF
2853 4058 PentF
2946 4109 PentF
2993 4169 PentF
3086 4225 PentF
3179 4277 PentF
3273 4326 PentF
3366 4370 PentF
3459 4411 PentF
3552 4440 PentF
3599 4474 PentF
3692 4506 PentF
3785 4536 PentF
3878 4563 PentF
3972 4588 PentF
4065 4611 PentF
4111 4629 PentF
4204 4649 PentF
4298 4668 PentF
4391 4686 PentF
4484 4702 PentF
4577 4716 PentF
4670 4726 PentF
4717 4732 PentF
4810 4737 PentF
4903 4740 PentF
4997 4742 PentF
5090 4744 PentF
5183 4745 PentF
5276 4746 PentF
5323 4747 PentF
5416 4747 PentF
5509 4748 PentF
5602 4748 PentF
5695 4748 PentF
5789 4749 PentF
5882 4749 PentF
5928 4749 PentF
6022 4749 PentF
6115 4749 PentF
6208 4749 PentF
6301 4749 PentF
6394 4749 PentF
6441 4749 PentF
6534 4749 PentF
6627 4750 PentF
6720 4750 PentF
1176 2657 PentF
1269 2735 PentF
1362 2812 PentF
1456 2891 PentF
1549 2969 PentF
1642 3050 PentF
1735 3131 PentF
1782 3200 PentF
1875 3281 PentF
1968 3362 PentF
2061 3443 PentF
2154 3524 PentF
2248 3604 PentF
2341 3684 PentF
2387 3748 PentF
2481 3824 PentF
2574 3898 PentF
2667 3971 PentF
2760 4040 PentF
2853 4107 PentF
2946 4158 PentF
2993 4218 PentF
3086 4274 PentF
3179 4326 PentF
3273 4373 PentF
3366 4417 PentF
3459 4457 PentF
3552 4487 PentF
3599 4521 PentF
3692 4552 PentF
3785 4580 PentF
3878 4605 PentF
3972 4627 PentF
4065 4649 PentF
4111 4664 PentF
4204 4680 PentF
4298 4695 PentF
4391 4707 PentF
4484 4718 PentF
4577 4727 PentF
4670 4733 PentF
4717 4737 PentF
4810 4740 PentF
4903 4742 PentF
4997 4744 PentF
5090 4745 PentF
5183 4746 PentF
5276 4746 PentF
5323 4747 PentF
5416 4747 PentF
5509 4747 PentF
5602 4748 PentF
5695 4748 PentF
5789 4748 PentF
5882 4748 PentF
5928 4748 PentF
6022 4748 PentF
6115 4748 PentF
6208 4749 PentF
6301 4749 PentF
6394 4749 PentF
6441 4749 PentF
6534 4749 PentF
6627 4749 PentF
6720 4749 PentF
1176 2646 PentF
1269 2717 PentF
1362 2786 PentF
1456 2855 PentF
1549 2926 PentF
1642 3000 PentF
1735 3077 PentF
1782 3142 PentF
1875 3222 PentF
1968 3302 PentF
2061 3381 PentF
2154 3457 PentF
2248 3536 PentF
2341 3615 PentF
2387 3680 PentF
2481 3758 PentF
2574 3834 PentF
2667 3909 PentF
2760 3981 PentF
2853 4050 PentF
2946 4104 PentF
2993 4169 PentF
3086 4228 PentF
3179 4283 PentF
3273 4333 PentF
3366 4378 PentF
3459 4420 PentF
3552 4451 PentF
3599 4484 PentF
3692 4516 PentF
3785 4545 PentF
3878 4572 PentF
3972 4597 PentF
4065 4620 PentF
4111 4636 PentF
4204 4655 PentF
4298 4672 PentF
4391 4689 PentF
4484 4704 PentF
4577 4717 PentF
4670 4727 PentF
4717 4732 PentF
4810 4737 PentF
4903 4739 PentF
4997 4741 PentF
5090 4743 PentF
5183 4744 PentF
5276 4744 PentF
5323 4745 PentF
5416 4746 PentF
5509 4746 PentF
5602 4747 PentF
5695 4747 PentF
5789 4747 PentF
5882 4747 PentF
5928 4747 PentF
6022 4748 PentF
6115 4748 PentF
6208 4748 PentF
6301 4748 PentF
6394 4748 PentF
6441 4748 PentF
6534 4748 PentF
6627 4749 PentF
6720 4749 PentF
1176 2755 PentF
1269 2827 PentF
1362 2892 PentF
1456 2955 PentF
1549 3017 PentF
1642 3082 PentF
1735 3151 PentF
1782 3213 PentF
1875 3286 PentF
1968 3358 PentF
2061 3432 PentF
2154 3506 PentF
2248 3583 PentF
2341 3661 PentF
2387 3729 PentF
2481 3806 PentF
2574 3884 PentF
2667 3959 PentF
2760 4033 PentF
2853 4105 PentF
2946 4165 PentF
2993 4228 PentF
3086 4288 PentF
3179 4344 PentF
3273 4395 PentF
3366 4439 PentF
3459 4478 PentF
3552 4509 PentF
3599 4540 PentF
3692 4567 PentF
3785 4591 PentF
3878 4612 PentF
3972 4632 PentF
4065 4649 PentF
4111 4663 PentF
4204 4678 PentF
4298 4690 PentF
4391 4703 PentF
4484 4714 PentF
4577 4724 PentF
4670 4732 PentF
4717 4737 PentF
4810 4741 PentF
4903 4743 PentF
4997 4745 PentF
5090 4746 PentF
5183 4747 PentF
5276 4748 PentF
5323 4748 PentF
5416 4749 PentF
5509 4749 PentF
5602 4749 PentF
5695 4750 PentF
5789 4750 PentF
5882 4750 PentF
5928 4750 PentF
6022 4750 PentF
6115 4750 PentF
6208 4750 PentF
6301 4750 PentF
6394 4750 PentF
6441 4750 PentF
6534 4750 PentF
6627 4750 PentF
6720 4750 PentF
1176 2764 PentF
1269 2837 PentF
1362 2902 PentF
1456 2964 PentF
1549 3027 PentF
1642 3094 PentF
1735 3163 PentF
1782 3226 PentF
1875 3298 PentF
1968 3371 PentF
2061 3444 PentF
2154 3518 PentF
2248 3594 PentF
2341 3670 PentF
2387 3738 PentF
2481 3814 PentF
2574 3890 PentF
2667 3966 PentF
2760 4038 PentF
2853 4109 PentF
2946 4167 PentF
2993 4231 PentF
3086 4290 PentF
3179 4344 PentF
3273 4394 PentF
3366 4438 PentF
3459 4476 PentF
3552 4506 PentF
3599 4538 PentF
3692 4566 PentF
3785 4591 PentF
3878 4613 PentF
3972 4634 PentF
4065 4651 PentF
4111 4665 PentF
4204 4680 PentF
4298 4693 PentF
4391 4705 PentF
4484 4715 PentF
4577 4725 PentF
4670 4732 PentF
4717 4736 PentF
4810 4739 PentF
4903 4742 PentF
4997 4743 PentF
5090 4744 PentF
5183 4745 PentF
5276 4746 PentF
5323 4746 PentF
5416 4747 PentF
5509 4747 PentF
5602 4747 PentF
5695 4748 PentF
5789 4748 PentF
5882 4748 PentF
5928 4748 PentF
6022 4748 PentF
6115 4748 PentF
6208 4749 PentF
6301 4749 PentF
6394 4749 PentF
6441 4749 PentF
6534 4749 PentF
6627 4749 PentF
6720 4749 PentF
1176 2685 PentF
1269 2756 PentF
1362 2821 PentF
1456 2885 PentF
1549 2951 PentF
1642 3019 PentF
1735 3091 PentF
1782 3154 PentF
1875 3230 PentF
1968 3306 PentF
2061 3382 PentF
2154 3460 PentF
2248 3539 PentF
2341 3619 PentF
2387 3687 PentF
2481 3767 PentF
2574 3846 PentF
2667 3925 PentF
2760 4001 PentF
2853 4074 PentF
2946 4132 PentF
2993 4198 PentF
3086 4260 PentF
3179 4317 PentF
3273 4368 PentF
3366 4414 PentF
3459 4456 PentF
3552 4488 PentF
3599 4521 PentF
3692 4551 PentF
3785 4579 PentF
3878 4604 PentF
3972 4626 PentF
4065 4646 PentF
4111 4661 PentF
4204 4677 PentF
4298 4691 PentF
4391 4704 PentF
4484 4716 PentF
4577 4726 PentF
4670 4733 PentF
4717 4738 PentF
4810 4741 PentF
4903 4744 PentF
4997 4745 PentF
5090 4746 PentF
5183 4747 PentF
5276 4748 PentF
5323 4748 PentF
5416 4749 PentF
5509 4749 PentF
5602 4750 PentF
5695 4750 PentF
5789 4750 PentF
5882 4750 PentF
5928 4750 PentF
6022 4750 PentF
6115 4750 PentF
6208 4750 PentF
6301 4750 PentF
6394 4750 PentF
6441 4750 PentF
6534 4750 PentF
6627 4750 PentF
6720 4750 PentF
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
