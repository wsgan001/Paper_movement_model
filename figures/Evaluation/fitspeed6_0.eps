%!PS-Adobe-2.0 EPSF-2.0
%%Title: fitspeed6_0.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Wed Jun 24 10:50:37 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fitspeed6_0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (ywj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 24 10:50:37 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 1565 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 1565 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1565 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2361 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2361 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2361 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3158 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3158 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3158 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3954 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3954 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3954 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4751 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4751 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2108 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3040 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3040 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3040 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3972 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3972 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3972 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 60)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4903 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4903 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4903 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 80)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5835 768 M
0 63 V
0 240 R
0 3680 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5835 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5835 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 120)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (probability)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3971 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (speed\(km/h\))]
] -80.0 MCshow
LTb
% Begin plot #1
5.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
5696 951 M
[ [(Helvetica) 240.0 0.0 true true 0 (f\(x\)=1-e)]
[(Helvetica) 192.0 120.0 true true 0 (-0.0025x)]
[(Helvetica) 153.6 216.0 true true 0 (1.65)]
[(Helvetica) 192.0 120.0 true true 0 (-0.845)]
] -123.2 MRshow
5.000 UL
LTb
0.00 0.00 0.00 C 5840 951 M
639 0 V
1176 3039 M
56 6 V
57 13 V
56 18 V
57 21 V
56 25 V
57 29 V
56 30 V
57 34 V
56 35 V
57 37 V
56 38 V
57 40 V
56 41 V
57 41 V
56 42 V
57 43 V
56 43 V
57 43 V
56 42 V
56 43 V
57 42 V
56 42 V
57 41 V
56 41 V
57 40 V
56 39 V
57 38 V
56 37 V
57 36 V
56 35 V
57 34 V
56 33 V
57 32 V
56 31 V
57 29 V
56 29 V
57 27 V
56 26 V
57 25 V
56 24 V
56 23 V
57 21 V
56 21 V
57 20 V
56 18 V
57 18 V
56 16 V
57 16 V
56 15 V
57 14 V
56 13 V
57 13 V
56 11 V
57 11 V
56 10 V
57 10 V
56 9 V
57 8 V
56 8 V
56 7 V
57 7 V
56 6 V
57 6 V
56 6 V
57 5 V
56 4 V
57 5 V
56 4 V
57 3 V
56 4 V
57 3 V
56 3 V
57 2 V
56 3 V
57 2 V
56 2 V
57 2 V
56 1 V
57 2 V
56 1 V
56 2 V
57 1 V
56 1 V
57 1 V
56 1 V
57 1 V
56 0 V
57 1 V
56 1 V
57 0 V
56 1 V
57 0 V
56 1 V
57 0 V
56 0 V
57 1 V
56 0 V
57 0 V
56 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
1.000 UL
LTb
0.90 0.12 0.06 C 1176 2822 PentF
1269 2890 PentF
1362 2958 PentF
1456 3027 PentF
1549 3095 PentF
1642 3165 PentF
1735 3233 PentF
1782 3291 PentF
1875 3359 PentF
1968 3426 PentF
2061 3490 PentF
2154 3552 PentF
2248 3617 PentF
2341 3680 PentF
2387 3732 PentF
2481 3795 PentF
2574 3856 PentF
2667 3916 PentF
2760 3975 PentF
2853 4031 PentF
2946 4077 PentF
2993 4130 PentF
3086 4182 PentF
3179 4229 PentF
3273 4273 PentF
3366 4314 PentF
3459 4352 PentF
3552 4380 PentF
3599 4413 PentF
3692 4444 PentF
3785 4474 PentF
3878 4502 PentF
3972 4529 PentF
4065 4555 PentF
4111 4576 PentF
4204 4599 PentF
4298 4623 PentF
4391 4645 PentF
4484 4667 PentF
4577 4687 PentF
4670 4704 PentF
4717 4714 PentF
4810 4722 PentF
4903 4729 PentF
4997 4733 PentF
5090 4737 PentF
5183 4739 PentF
5276 4741 PentF
5323 4743 PentF
5416 4744 PentF
5509 4745 PentF
5602 4746 PentF
5695 4746 PentF
5789 4747 PentF
5882 4747 PentF
5928 4747 PentF
6022 4747 PentF
6115 4748 PentF
6208 4748 PentF
6301 4748 PentF
6394 4748 PentF
6441 4748 PentF
6534 4748 PentF
6627 4748 PentF
6720 4749 PentF
1176 3141 PentF
1269 3188 PentF
1362 3225 PentF
1456 3260 PentF
1549 3294 PentF
1642 3328 PentF
1735 3364 PentF
1782 3394 PentF
1875 3434 PentF
1968 3475 PentF
2061 3518 PentF
2154 3563 PentF
2248 3611 PentF
2341 3661 PentF
2387 3705 PentF
2481 3761 PentF
2574 3819 PentF
2667 3879 PentF
2760 3941 PentF
2853 4003 PentF
2946 4052 PentF
2993 4111 PentF
3086 4168 PentF
3179 4220 PentF
3273 4268 PentF
3366 4313 PentF
3459 4354 PentF
3552 4383 PentF
3599 4417 PentF
3692 4446 PentF
3785 4473 PentF
3878 4499 PentF
3972 4522 PentF
4065 4546 PentF
4111 4565 PentF
4204 4587 PentF
4298 4609 PentF
4391 4631 PentF
4484 4655 PentF
4577 4677 PentF
4670 4695 PentF
4717 4706 PentF
4810 4716 PentF
4903 4722 PentF
4997 4726 PentF
5090 4730 PentF
5183 4733 PentF
5276 4736 PentF
5323 4739 PentF
5416 4741 PentF
5509 4743 PentF
5602 4744 PentF
5695 4745 PentF
5789 4746 PentF
5882 4746 PentF
5928 4747 PentF
6022 4747 PentF
6115 4748 PentF
6208 4748 PentF
6301 4748 PentF
6394 4748 PentF
6441 4748 PentF
6534 4749 PentF
6627 4749 PentF
6720 4749 PentF
1176 2996 PentF
1269 3048 PentF
1362 3090 PentF
1456 3131 PentF
1549 3170 PentF
1642 3212 PentF
1735 3256 PentF
1782 3293 PentF
1875 3340 PentF
1968 3389 PentF
2061 3440 PentF
2154 3494 PentF
2248 3550 PentF
2341 3610 PentF
2387 3660 PentF
2481 3724 PentF
2574 3789 PentF
2667 3856 PentF
2760 3924 PentF
2853 3990 PentF
2946 4043 PentF
2993 4106 PentF
3086 4163 PentF
3179 4216 PentF
3273 4266 PentF
3366 4311 PentF
3459 4353 PentF
3552 4384 PentF
3599 4420 PentF
3692 4454 PentF
3785 4485 PentF
3878 4515 PentF
3972 4542 PentF
4065 4569 PentF
4111 4589 PentF
4204 4613 PentF
4298 4636 PentF
4391 4659 PentF
4484 4679 PentF
4577 4698 PentF
4670 4713 PentF
4717 4723 PentF
4810 4730 PentF
4903 4735 PentF
4997 4739 PentF
5090 4742 PentF
5183 4744 PentF
5276 4746 PentF
5323 4747 PentF
5416 4748 PentF
5509 4749 PentF
5602 4749 PentF
5695 4750 PentF
5789 4750 PentF
5882 4750 PentF
5928 4750 PentF
6022 4750 PentF
6115 4750 PentF
6208 4750 PentF
6301 4751 PentF
6394 4751 PentF
6441 4751 PentF
6627 4751 PentF
6720 4751 PentF
1176 2898 PentF
1269 2966 PentF
1362 3027 PentF
1456 3088 PentF
1549 3148 PentF
1642 3210 PentF
1735 3275 PentF
1782 3331 PentF
1875 3396 PentF
1968 3459 PentF
2061 3522 PentF
2154 3584 PentF
2248 3648 PentF
2341 3714 PentF
2387 3771 PentF
2481 3837 PentF
2574 3902 PentF
2667 3966 PentF
2760 4029 PentF
2853 4089 PentF
2946 4136 PentF
2993 4189 PentF
3086 4241 PentF
3179 4287 PentF
3273 4330 PentF
3366 4369 PentF
3459 4405 PentF
3552 4431 PentF
3599 4461 PentF
3692 4489 PentF
3785 4514 PentF
3878 4538 PentF
3972 4561 PentF
4065 4583 PentF
4111 4601 PentF
4204 4621 PentF
4298 4640 PentF
4391 4659 PentF
4484 4678 PentF
4577 4695 PentF
4670 4709 PentF
4717 4717 PentF
4810 4725 PentF
4903 4730 PentF
4997 4733 PentF
5090 4736 PentF
5183 4738 PentF
5276 4740 PentF
5323 4742 PentF
5416 4743 PentF
5509 4744 PentF
5602 4745 PentF
5695 4745 PentF
5789 4746 PentF
5882 4746 PentF
5928 4746 PentF
6022 4747 PentF
6115 4747 PentF
6208 4747 PentF
6301 4747 PentF
6394 4748 PentF
6441 4748 PentF
6534 4748 PentF
6627 4748 PentF
6720 4748 PentF
1176 2912 PentF
1269 2982 PentF
1362 3044 PentF
1456 3107 PentF
1549 3169 PentF
1642 3231 PentF
1735 3295 PentF
1782 3352 PentF
1875 3417 PentF
1968 3481 PentF
2061 3545 PentF
2154 3609 PentF
2248 3672 PentF
2341 3736 PentF
2387 3793 PentF
2481 3858 PentF
2574 3922 PentF
2667 3984 PentF
2760 4045 PentF
2853 4105 PentF
2946 4154 PentF
2993 4208 PentF
3086 4259 PentF
3179 4306 PentF
3273 4349 PentF
3366 4390 PentF
3459 4425 PentF
3552 4453 PentF
3599 4484 PentF
3692 4512 PentF
3785 4537 PentF
3878 4560 PentF
3972 4582 PentF
4065 4603 PentF
4111 4619 PentF
4204 4637 PentF
4298 4654 PentF
4391 4671 PentF
4484 4688 PentF
4577 4702 PentF
4670 4715 PentF
4717 4723 PentF
4810 4730 PentF
4903 4735 PentF
4997 4738 PentF
5090 4741 PentF
5183 4743 PentF
5276 4745 PentF
5323 4746 PentF
5416 4747 PentF
5509 4748 PentF
5602 4749 PentF
5695 4749 PentF
5789 4750 PentF
5882 4750 PentF
5928 4750 PentF
6022 4750 PentF
6115 4750 PentF
6208 4750 PentF
6301 4750 PentF
6394 4750 PentF
6441 4750 PentF
6534 4750 PentF
6627 4750 PentF
6720 4751 PentF
1176 3024 PentF
1269 3090 PentF
1362 3150 PentF
1456 3208 PentF
1549 3265 PentF
1642 3323 PentF
1735 3382 PentF
1782 3434 PentF
1875 3493 PentF
1968 3552 PentF
2061 3610 PentF
2154 3669 PentF
2248 3728 PentF
2341 3789 PentF
2387 3841 PentF
2481 3901 PentF
2574 3961 PentF
2667 4019 PentF
2760 4077 PentF
2853 4132 PentF
2946 4178 PentF
2993 4230 PentF
3086 4278 PentF
3179 4323 PentF
3273 4363 PentF
3366 4399 PentF
3459 4432 PentF
3552 4459 PentF
3599 4487 PentF
3692 4513 PentF
3785 4538 PentF
3878 4560 PentF
3972 4581 PentF
4065 4600 PentF
4111 4615 PentF
4204 4633 PentF
4298 4649 PentF
4391 4666 PentF
4484 4683 PentF
4577 4698 PentF
4670 4710 PentF
4717 4718 PentF
4810 4725 PentF
4903 4730 PentF
4997 4733 PentF
5090 4736 PentF
5183 4739 PentF
5276 4740 PentF
5323 4742 PentF
5416 4743 PentF
5509 4744 PentF
5602 4745 PentF
5695 4745 PentF
5789 4746 PentF
5882 4746 PentF
5928 4746 PentF
6022 4746 PentF
6115 4747 PentF
6208 4747 PentF
6301 4747 PentF
6394 4747 PentF
6441 4747 PentF
6534 4748 PentF
6627 4748 PentF
6720 4748 PentF
1176 2962 PentF
1269 3030 PentF
1362 3090 PentF
1456 3149 PentF
1549 3208 PentF
1642 3269 PentF
1735 3331 PentF
1782 3385 PentF
1875 3447 PentF
1968 3509 PentF
2061 3570 PentF
2154 3631 PentF
2248 3693 PentF
2341 3756 PentF
2387 3809 PentF
2481 3871 PentF
2574 3932 PentF
2667 3992 PentF
2760 4051 PentF
2853 4108 PentF
2946 4155 PentF
2993 4208 PentF
3086 4257 PentF
3179 4302 PentF
3273 4342 PentF
3366 4381 PentF
3459 4415 PentF
3552 4441 PentF
3599 4470 PentF
3692 4499 PentF
3785 4525 PentF
3878 4550 PentF
3972 4573 PentF
4065 4595 PentF
4111 4612 PentF
4204 4632 PentF
4298 4649 PentF
4391 4666 PentF
4484 4683 PentF
4577 4699 PentF
4670 4713 PentF
4717 4721 PentF
4810 4728 PentF
4903 4733 PentF
4997 4737 PentF
5090 4739 PentF
5183 4741 PentF
5276 4743 PentF
5323 4744 PentF
5416 4745 PentF
5509 4746 PentF
5602 4747 PentF
5695 4747 PentF
5789 4748 PentF
5882 4748 PentF
5928 4749 PentF
6022 4749 PentF
6115 4749 PentF
6208 4749 PentF
6301 4749 PentF
6394 4749 PentF
6441 4749 PentF
6534 4749 PentF
6627 4749 PentF
6720 4750 PentF
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
